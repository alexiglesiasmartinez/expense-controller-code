{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/VisitMe/VisitMe.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesList","expenses","length","map","expense","id","ExpensesFilter","value","selected","onChange","e","onGetMyYear","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","point","ExpensesChart","chartPoints","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","expenseItem","filter","myFilteredExpenses","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onGetExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","myExpenseData","d","key","parseInt","getSeconds","console","log","onAddNewExpense","VisitMe","href","DUMMY_DATA","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f8cd434.chunk.js","sourcesContent":["import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n\r\n    const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n    const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n    const year = props.date.getFullYear();\r\n\r\n    return (\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import \"./Card.css\";\r\n\r\nfunction Card(props) {\r\n    const classes = \" card \" + props.className;\r\n    return (\r\n        <div className={classes}>{props.children}</div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\nconst ExpenseItem = (props) => {\r\n    return (\r\n        <Card className='expense-item'>\r\n            <ExpenseDate date={props.date} />\r\n            <div className='expense-item__description'>\r\n                <h2>{props.title}</h2>\r\n                <div className='expense-item__price'>{props.amount}â‚¬</div>\r\n            </div>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nfunction ExpensesList(props) {\r\n    if (props.expenses.length === 0) {\r\n        return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\r\n    }\r\n    else {\r\n        return (\r\n            <ul className=\"expenses-list\">\r\n                {props.expenses.map((expense) => (\r\n                    <ExpenseItem\r\n                        key={expense.id}\r\n                        title={expense.title}\r\n                        amount={expense.amount}\r\n                        date={expense.date}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExpensesList;","import React from \"react\";\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n    const saveYearHandler = (e) => {\r\n        props.onGetMyYear(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className='expenses-filter'>\r\n            <div className='expenses-filter__control'>\r\n                <label>Filter by year</label>\r\n                <select value={props.selected} onChange={saveYearHandler}>\r\n                    <option value='2021'>2021</option>\r\n                    <option value='2020'>2020</option>\r\n                    <option value='2019'>2019</option>\r\n                    <option value='2018'>2018</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n\r\n","import \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n\r\n    let barFillHeight = \"0%\";\r\n\r\n    if (props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n    }\r\n\r\n    return (\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div\r\n                    className=\"chart-bar__fill\"\r\n                    style={{ height: barFillHeight }}>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"chart-bar__label\">{props.label}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChartBar;","import ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n\r\n    return (\r\n        <div className=\"chart\">\r\n            {props.dataPoints.map((point) =>\r\n                <ChartBar\r\n                    key={point.label}\r\n                    value={point.value}\r\n                    maxValue={totalMaximum}\r\n                    label={point.label}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n\r\n    const chartPoints = [\r\n        { label: \"Jan\", value: 0 },\r\n        { label: \"Feb\", value: 0 },\r\n        { label: \"Mar\", value: 0 },\r\n        { label: \"Apr\", value: 0 },\r\n        { label: \"May\", value: 0 },\r\n        { label: \"Jun\", value: 0 },\r\n        { label: \"Jul\", value: 0 },\r\n        { label: \"Aug\", value: 0 },\r\n        { label: \"Sep\", value: 0 },\r\n        { label: \"Oct\", value: 0 },\r\n        { label: \"Nov\", value: 0 },\r\n        { label: \"Dec\", value: 0 },\r\n    ];\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;","import React, { useState } from 'react';\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesChart from './ExpensesChart';\r\nimport './Expenses.css';\r\n\r\nconst Expenses = (props) => {\r\n    const [filteredYear, setFilteredYear] = useState('2021');\r\n\r\n    const filterChangeHandler = (selectedYear) => {\r\n        setFilteredYear(selectedYear);\r\n    };\r\n\r\n    const filteredExpenses = props.expenseItem.filter(myFilteredExpenses => {\r\n        return myFilteredExpenses.date.getFullYear().toString() === filteredYear;\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Card className='expenses'>\r\n                <ExpensesFilter\r\n                    selected={filteredYear}\r\n                    onGetMyYear={filterChangeHandler}\r\n                />\r\n                <ExpensesChart expenses={filteredExpenses} />\r\n                <ExpensesList expenses={filteredExpenses} />\r\n\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n\r\n    const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n    const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n    const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n    const titleChangeHandler = (e) => {\r\n        setEnteredTitle(e.target.value);\r\n    };\r\n    const amountChangeHandler = (e) => {\r\n        setEnteredAmount(e.target.value);\r\n    };\r\n    const dateChangeHandler = (e) => {\r\n        setEnteredDate(e.target.value);\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate),\r\n        };\r\n        props.onGetExpenseData(expenseData);\r\n\r\n        setEnteredTitle(\"\");\r\n        setEnteredAmount(\"\");\r\n        setEnteredDate(\"\");\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={enteredTitle}\r\n                        onChange={titleChangeHandler} />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        value={enteredAmount}\r\n                        onChange={amountChangeHandler}\r\n                        min=\"0.01\"\r\n                        step=\"0.01\" />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        value={enteredDate}\r\n                        onChange={dateChangeHandler}\r\n                        min=\"2019-01-01\"\r\n                        max=\"2022-12-31\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n                <button type=\"submit\">Add expense</button>\r\n            </div>\r\n        </form >\r\n    );\r\n};\r\n\r\nexport default ExpenseForm;","import React, { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const getExpenseData = (myExpenseData) => {\r\n        var d = new Date();\r\n        var key = parseInt(d.getSeconds());\r\n\r\n        const expenseData = {\r\n            ...myExpenseData,\r\n            id: key\r\n        };\r\n\r\n        console.log(key);\r\n\r\n        props.onAddNewExpense(expenseData);\r\n        console.log(myExpenseData);\r\n\r\n        setIsEditing(false);\r\n    };\r\n\r\n    const startEditingHandler = () => {\r\n        setIsEditing(true);\r\n    };\r\n\r\n    const stopEditingHandler = () => {\r\n        setIsEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"new-expense\">\r\n            {!isEditing &&\r\n                <button onClick={startEditingHandler}>Add new expense</button>\r\n            }\r\n\r\n            {isEditing &&\r\n                <ExpenseForm\r\n                    onGetExpenseData={getExpenseData}\r\n                    onCancel={stopEditingHandler}\r\n                />\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewExpense;","import \"./VisitMe.css\";\r\n\r\nconst VisitMe = () => {\r\n    return (\r\n        <div className=\"visit-me\">\r\n            <a href=\"https://www.alexiglesias.in/#work\" target=\"__blank\" className=\"visit-me-link\">Go back</a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VisitMe;\r\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport VisitMe from \"./components/VisitMe/VisitMe\";\n\nconst DUMMY_DATA = [\n  {\n    id: '1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2019, 7, 14),\n  },\n  {\n    id: '2',\n    title: 'New TV',\n    amount: 799.49,\n    date: new Date(2020, 2, 12)\n  },\n  {\n    id: '3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 8, 28),\n  },\n  {\n    id: '4',\n    title: 'New Desk',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n  {\n    id: '5',\n    title: 'iPhone',\n    amount: 600,\n    date: new Date(2021, 4, 12),\n  },\n  {\n    id: '6',\n    title: 'iPad',\n    amount: 999,\n    date: new Date(2019, 4, 12),\n  },\n];\n\nconst App = () => {\n\n  const [expenses, setExpenses] = useState(DUMMY_DATA);\n\n  const addNewExpenseHandler = (myExpenseData) => {\n    setExpenses(prevExpenses => {\n      return [myExpenseData, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddNewExpense={addNewExpenseHandler} />\n      <Expenses expenseItem={expenses} />\n      <VisitMe />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}